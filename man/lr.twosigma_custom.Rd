% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lr.twosigma_custom.R
\name{lr.twosigma_custom}
\alias{lr.twosigma_custom}
\title{lr.twosigma: Conveinent wrapper function for performing joint likelihood ratio tests in TWO-SIGMA.}
\usage{
lr.twosigma_custom(count, mean_form_alt, zi_form_alt, mean_form_null,
  zi_form_null, id, lr.df, disp_covar = NULL, weights = rep(1,
  length(count)), control = glmmTMBControl(optCtrl = list(iter.max =
  1e+05, eval.max = 1e+05, step.max = 1e-05, step.min = 1e-05, rel.tol =
  1e-05, x.tol = 1e-05)))
}
\arguments{
\item{count}{Vector of non-negative integer read counts.}

\item{id}{Vector of individual-level ID's. Used for random effect prediction and the adhoc method but required regardless.}

\item{lr.df}{Degrees of Freedom for the constructed likelihood ratio test. Must be a non-negative integer.}

\item{disp_covar}{Covariates for a log-linear model for the dispersion. Either a matrix or = 1 to indicate an intercept only model.}

\item{weights}{weights, as in glm. Defaults to 1 for all observations and no scaling or centering of weights is performed.}

\item{control}{Control parameters for optimization in glmmTMB.}

\item{mean_covar}{Covariates for the (conditional) mean model. Must be a matrix (without an intercept column) or a vector if a single covariate is being tested.}

\item{zi_covar}{Covariates for the zero-inflation model. Must be a matrix (without an intercept column) or a vector if a single covariate is being tested.}
}
\value{
A list containing glmmTMB objects of model fits under the null and alternative, the 2 d.f. Likelihood Ratio statistic, and the p-value.
}
\description{
lr.twosigma: Conveinent wrapper function for performing joint likelihood ratio tests in TWO-SIGMA.
}
\section{Details}{

This function is a wrapper for conducting fixed effect likelihood ratio tests with twosigma.  There is no (absolutely no) checking to make sure that the alt and null model formulas represent a valid likelihood ratio test when fit together.  Users must ensure that inputted formulas represent valid nested models.
}

